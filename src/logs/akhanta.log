2024-04-26 17:26:52 - [INFO] - com.tomasdev.akhanta.RestApiApplication - Starting RestApiApplication using Java 22 with PID 12560 (C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes started by tomia in C:\Users\tomia\Desktop\code\akhanta-backend-2)
2024-04-26 17:26:52 - [INFO] - com.tomasdev.akhanta.RestApiApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-26 17:26:53 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-26 17:26:53 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 6 MongoDB repository interfaces.
2024-04-26 17:26:54 - [INFO] - o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-04-26 17:26:54 - [INFO] - org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-04-26 17:26:54 - [INFO] - org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-26 17:26:54 - [INFO] - o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-04-26 17:26:54 - [INFO] - o.s.b.w.s.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2588 ms
2024-04-26 17:26:54 - [ERROR] - o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'applicationConfig' defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\config\ApplicationConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'jwtAuthenticationProvider' defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\security\JwtAuthenticationProvider.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'java.lang.String' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-04-26 17:26:54 - [INFO] - org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-04-26 17:26:54 - [WARN] - o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-04-26 17:26:54 - [INFO] - o.s.b.a.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-04-26 17:26:55 - [ERROR] - o.s.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.tomasdev.akhanta.security.JwtAuthenticationProvider required a bean of type 'java.lang.String' that could not be found.


Action:

Consider defining a bean of type 'java.lang.String' in your configuration.

2024-04-26 17:27:15 - [INFO] - com.tomasdev.akhanta.RestApiApplication - Starting RestApiApplication using Java 22 with PID 14736 (C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes started by tomia in C:\Users\tomia\Desktop\code\akhanta-backend-2)
2024-04-26 17:27:15 - [INFO] - com.tomasdev.akhanta.RestApiApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-26 17:27:15 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-26 17:27:16 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 102 ms. Found 6 MongoDB repository interfaces.
2024-04-26 17:27:16 - [INFO] - o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-04-26 17:27:16 - [INFO] - org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-04-26 17:27:16 - [INFO] - org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-26 17:27:16 - [INFO] - o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-04-26 17:27:16 - [INFO] - o.s.b.w.s.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1795 ms
2024-04-26 17:27:17 - [INFO] - org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "akhanta-test"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='tomascaceres', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@47b33e07, com.mongodb.Jep395RecordCodecProvider@7126e26, com.mongodb.KotlinCodecProvider@151ab2b9]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=akhanta-test.a3hcche.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-wl8l0e-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='akhanta-test', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-26 17:27:17 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:27:17 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:27:17 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:27:17 - [ERROR] - o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'applicationConfig' defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\config\ApplicationConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'jwtAuthenticationProvider' defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\security\JwtAuthenticationProvider.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'userServiceImpl' defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\service\impl\UserServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'applicationConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-04-26 17:27:17 - [INFO] - org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-04-26 17:27:17 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [BufferPoolPruner-1-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:27:17 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='662bc7d54aad0478173ff83b', description='akhanta-test'}-srv-akhanta-test.a3hcche.mongodb.net] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleepNanos0(Native Method)
 java.base/java.lang.Thread.sleepNanos(Thread.java:491)
 java.base/java.lang.Thread.sleep(Thread.java:522)
 com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor$DnsSrvRecordMonitorRunnable.run(DefaultDnsSrvRecordMonitor.java:108)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:27:17 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='662bc7d54aad0478173ff83b', description='akhanta-test'}-ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier.pointMultiply(ECOperations.java:575)
 java.base/sun.security.ec.ECOperations.multiply(ECOperations.java:214)
 java.base/sun.security.ec.ECPrivateKeyImpl.calculatePublicKey(ECPrivateKeyImpl.java:213)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPairImpl(ECKeyPairGenerator.java:197)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:147)
 java.base/java.security.KeyPairGenerator$Delegate.generateKeyPair(KeyPairGenerator.java:728)
 java.base/sun.security.ssl.ECDHKeyExchange$ECDHEPossession.<init>(ECDHKeyExchange.java:118)
 java.base/sun.security.ssl.NamedGroup$ECDHEScheme.createPossession(NamedGroup.java:706)
 java.base/sun.security.ssl.NamedGroup$NamedGroupSpec.createPossession(NamedGroup.java:642)
 java.base/sun.security.ssl.NamedGroup.createPossession(NamedGroup.java:550)
 java.base/sun.security.ssl.SSLKeyExchange$T13KeyAgreement.createPossession(SSLKeyExchange.java:573)
 java.base/sun.security.ssl.SSLKeyExchange.createPossessions(SSLKeyExchange.java:92)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.getShare(KeyShareExtension.java:295)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.produce(KeyShareExtension.java:257)
 java.base/sun.security.ssl.SSLExtension.produce(SSLExtension.java:599)
 java.base/sun.security.ssl.SSLExtensions.produce(SSLExtensions.java:265)
 java.base/sun.security.ssl.ClientHello$ClientHelloKickstartProducer.produce(ClientHello.java:637)
 java.base/sun.security.ssl.SSLHandshake.kickstart(SSLHandshake.java:526)
 java.base/sun.security.ssl.ClientHandshakeContext.kickstart(ClientHandshakeContext.java:112)
 java.base/sun.security.ssl.TransportContext.kickstart(TransportContext.java:258)
 java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:448)
 java.base/sun.security.ssl.SSLSocketImpl.ensureNegotiated(SSLSocketImpl.java:924)
 java.base/sun.security.ssl.SSLSocketImpl$AppOutputStream.write(SSLSocketImpl.java:1293)
 com.mongodb.internal.connection.SocketStream.write(SocketStream.java:164)
 com.mongodb.internal.connection.InternalStreamConnection.sendMessage(InternalStreamConnection.java:584)
 com.mongodb.internal.connection.InternalStreamConnection.sendCommandMessage(InternalStreamConnection.java:419)
 com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:364)
 com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:102)
 com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.initializeConnectionDescription(InternalStreamConnectionInitializer.java:130)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.startHandshake(InternalStreamConnectionInitializer.java:78)
 com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:213)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:196)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:156)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:27:17 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='662bc7d54aad0478173ff83b', description='akhanta-test'}-ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier.pointMultiply(ECOperations.java:575)
 java.base/sun.security.ec.ECOperations.multiply(ECOperations.java:214)
 java.base/sun.security.ec.ECPrivateKeyImpl.calculatePublicKey(ECPrivateKeyImpl.java:213)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPairImpl(ECKeyPairGenerator.java:197)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:147)
 java.base/java.security.KeyPairGenerator$Delegate.generateKeyPair(KeyPairGenerator.java:728)
 java.base/sun.security.ssl.ECDHKeyExchange$ECDHEPossession.<init>(ECDHKeyExchange.java:118)
 java.base/sun.security.ssl.NamedGroup$ECDHEScheme.createPossession(NamedGroup.java:706)
 java.base/sun.security.ssl.NamedGroup$NamedGroupSpec.createPossession(NamedGroup.java:642)
 java.base/sun.security.ssl.NamedGroup.createPossession(NamedGroup.java:550)
 java.base/sun.security.ssl.SSLKeyExchange$T13KeyAgreement.createPossession(SSLKeyExchange.java:573)
 java.base/sun.security.ssl.SSLKeyExchange.createPossessions(SSLKeyExchange.java:92)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.getShare(KeyShareExtension.java:295)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.produce(KeyShareExtension.java:257)
 java.base/sun.security.ssl.SSLExtension.produce(SSLExtension.java:599)
 java.base/sun.security.ssl.SSLExtensions.produce(SSLExtensions.java:265)
 java.base/sun.security.ssl.ClientHello$ClientHelloKickstartProducer.produce(ClientHello.java:637)
 java.base/sun.security.ssl.SSLHandshake.kickstart(SSLHandshake.java:526)
 java.base/sun.security.ssl.ClientHandshakeContext.kickstart(ClientHandshakeContext.java:112)
 java.base/sun.security.ssl.TransportContext.kickstart(TransportContext.java:258)
 java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:448)
 java.base/sun.security.ssl.SSLSocketImpl.ensureNegotiated(SSLSocketImpl.java:924)
 java.base/sun.security.ssl.SSLSocketImpl$AppOutputStream.write(SSLSocketImpl.java:1293)
 com.mongodb.internal.connection.SocketStream.write(SocketStream.java:164)
 com.mongodb.internal.connection.InternalStreamConnection.sendMessage(InternalStreamConnection.java:584)
 com.mongodb.internal.connection.InternalStreamConnection.sendCommandMessage(InternalStreamConnection.java:419)
 com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:364)
 com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:102)
 com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.initializeConnectionDescription(InternalStreamConnectionInitializer.java:130)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.startHandshake(InternalStreamConnectionInitializer.java:78)
 com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:213)
 com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.initialize(DefaultServerMonitor.java:427)
 com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:403)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:27:17 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='662bc7d54aad0478173ff83b', description='akhanta-test'}-ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.setValue(IntegerPolynomial.java:668)
 java.base/sun.security.ec.ECOperations.setSum(ECOperations.java:300)
 java.base/sun.security.ec.ECOperations$PointMultiplier$Default.pointMultiply(ECOperations.java:509)
 java.base/sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier$P256.<clinit>(ECOperations.java:658)
 java.base/sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier.pointMultiply(ECOperations.java:575)
 java.base/sun.security.ec.ECOperations.multiply(ECOperations.java:214)
 java.base/sun.security.ec.ECPrivateKeyImpl.calculatePublicKey(ECPrivateKeyImpl.java:213)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPairImpl(ECKeyPairGenerator.java:197)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:147)
 java.base/java.security.KeyPairGenerator$Delegate.generateKeyPair(KeyPairGenerator.java:728)
 java.base/sun.security.ssl.ECDHKeyExchange$ECDHEPossession.<init>(ECDHKeyExchange.java:118)
 java.base/sun.security.ssl.NamedGroup$ECDHEScheme.createPossession(NamedGroup.java:706)
 java.base/sun.security.ssl.NamedGroup$NamedGroupSpec.createPossession(NamedGroup.java:642)
 java.base/sun.security.ssl.NamedGroup.createPossession(NamedGroup.java:550)
 java.base/sun.security.ssl.SSLKeyExchange$T13KeyAgreement.createPossession(SSLKeyExchange.java:573)
 java.base/sun.security.ssl.SSLKeyExchange.createPossessions(SSLKeyExchange.java:92)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.getShare(KeyShareExtension.java:295)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.produce(KeyShareExtension.java:257)
 java.base/sun.security.ssl.SSLExtension.produce(SSLExtension.java:599)
 java.base/sun.security.ssl.SSLExtensions.produce(SSLExtensions.java:265)
 java.base/sun.security.ssl.ClientHello$ClientHelloKickstartProducer.produce(ClientHello.java:637)
 java.base/sun.security.ssl.SSLHandshake.kickstart(SSLHandshake.java:526)
 java.base/sun.security.ssl.ClientHandshakeContext.kickstart(ClientHandshakeContext.java:112)
 java.base/sun.security.ssl.TransportContext.kickstart(TransportContext.java:258)
 java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:448)
 java.base/sun.security.ssl.SSLSocketImpl.ensureNegotiated(SSLSocketImpl.java:924)
 java.base/sun.security.ssl.SSLSocketImpl$AppOutputStream.write(SSLSocketImpl.java:1293)
 com.mongodb.internal.connection.SocketStream.write(SocketStream.java:164)
 com.mongodb.internal.connection.InternalStreamConnection.sendMessage(InternalStreamConnection.java:584)
 com.mongodb.internal.connection.InternalStreamConnection.sendCommandMessage(InternalStreamConnection.java:419)
 com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:364)
 com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:102)
 com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.initializeConnectionDescription(InternalStreamConnectionInitializer.java:130)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.startHandshake(InternalStreamConnectionInitializer.java:78)
 com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:213)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:196)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:156)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:27:17 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='662bc7d54aad0478173ff83b', description='akhanta-test'}-ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier.pointMultiply(ECOperations.java:575)
 java.base/sun.security.ec.ECOperations.multiply(ECOperations.java:214)
 java.base/sun.security.ec.ECPrivateKeyImpl.calculatePublicKey(ECPrivateKeyImpl.java:213)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPairImpl(ECKeyPairGenerator.java:197)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:147)
 java.base/java.security.KeyPairGenerator$Delegate.generateKeyPair(KeyPairGenerator.java:728)
 java.base/sun.security.ssl.ECDHKeyExchange$ECDHEPossession.<init>(ECDHKeyExchange.java:118)
 java.base/sun.security.ssl.NamedGroup$ECDHEScheme.createPossession(NamedGroup.java:706)
 java.base/sun.security.ssl.NamedGroup$NamedGroupSpec.createPossession(NamedGroup.java:642)
 java.base/sun.security.ssl.NamedGroup.createPossession(NamedGroup.java:550)
 java.base/sun.security.ssl.SSLKeyExchange$T13KeyAgreement.createPossession(SSLKeyExchange.java:573)
 java.base/sun.security.ssl.SSLKeyExchange.createPossessions(SSLKeyExchange.java:92)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.getShare(KeyShareExtension.java:295)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.produce(KeyShareExtension.java:257)
 java.base/sun.security.ssl.SSLExtension.produce(SSLExtension.java:599)
 java.base/sun.security.ssl.SSLExtensions.produce(SSLExtensions.java:265)
 java.base/sun.security.ssl.ClientHello$ClientHelloKickstartProducer.produce(ClientHello.java:637)
 java.base/sun.security.ssl.SSLHandshake.kickstart(SSLHandshake.java:526)
 java.base/sun.security.ssl.ClientHandshakeContext.kickstart(ClientHandshakeContext.java:112)
 java.base/sun.security.ssl.TransportContext.kickstart(TransportContext.java:258)
 java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:448)
 java.base/sun.security.ssl.SSLSocketImpl.ensureNegotiated(SSLSocketImpl.java:924)
 java.base/sun.security.ssl.SSLSocketImpl$AppOutputStream.write(SSLSocketImpl.java:1293)
 com.mongodb.internal.connection.SocketStream.write(SocketStream.java:164)
 com.mongodb.internal.connection.InternalStreamConnection.sendMessage(InternalStreamConnection.java:584)
 com.mongodb.internal.connection.InternalStreamConnection.sendCommandMessage(InternalStreamConnection.java:419)
 com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:364)
 com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:102)
 com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.initializeConnectionDescription(InternalStreamConnectionInitializer.java:130)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.startHandshake(InternalStreamConnectionInitializer.java:78)
 com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:213)
 com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.initialize(DefaultServerMonitor.java:427)
 com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:403)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:27:17 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='662bc7d54aad0478173ff83b', description='akhanta-test'}-ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier.pointMultiply(ECOperations.java:575)
 java.base/sun.security.ec.ECOperations.multiply(ECOperations.java:214)
 java.base/sun.security.ec.ECPrivateKeyImpl.calculatePublicKey(ECPrivateKeyImpl.java:213)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPairImpl(ECKeyPairGenerator.java:197)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:147)
 java.base/java.security.KeyPairGenerator$Delegate.generateKeyPair(KeyPairGenerator.java:728)
 java.base/sun.security.ssl.ECDHKeyExchange$ECDHEPossession.<init>(ECDHKeyExchange.java:118)
 java.base/sun.security.ssl.NamedGroup$ECDHEScheme.createPossession(NamedGroup.java:706)
 java.base/sun.security.ssl.NamedGroup$NamedGroupSpec.createPossession(NamedGroup.java:642)
 java.base/sun.security.ssl.NamedGroup.createPossession(NamedGroup.java:550)
 java.base/sun.security.ssl.SSLKeyExchange$T13KeyAgreement.createPossession(SSLKeyExchange.java:573)
 java.base/sun.security.ssl.SSLKeyExchange.createPossessions(SSLKeyExchange.java:92)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.getShare(KeyShareExtension.java:295)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.produce(KeyShareExtension.java:257)
 java.base/sun.security.ssl.SSLExtension.produce(SSLExtension.java:599)
 java.base/sun.security.ssl.SSLExtensions.produce(SSLExtensions.java:265)
 java.base/sun.security.ssl.ClientHello$ClientHelloKickstartProducer.produce(ClientHello.java:637)
 java.base/sun.security.ssl.SSLHandshake.kickstart(SSLHandshake.java:526)
 java.base/sun.security.ssl.ClientHandshakeContext.kickstart(ClientHandshakeContext.java:112)
 java.base/sun.security.ssl.TransportContext.kickstart(TransportContext.java:258)
 java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:448)
 java.base/sun.security.ssl.SSLSocketImpl.ensureNegotiated(SSLSocketImpl.java:924)
 java.base/sun.security.ssl.SSLSocketImpl$AppOutputStream.write(SSLSocketImpl.java:1293)
 com.mongodb.internal.connection.SocketStream.write(SocketStream.java:164)
 com.mongodb.internal.connection.InternalStreamConnection.sendMessage(InternalStreamConnection.java:584)
 com.mongodb.internal.connection.InternalStreamConnection.sendCommandMessage(InternalStreamConnection.java:419)
 com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:364)
 com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:102)
 com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.initializeConnectionDescription(InternalStreamConnectionInitializer.java:130)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.startHandshake(InternalStreamConnectionInitializer.java:78)
 com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:213)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:196)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:156)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:27:17 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='662bc7d54aad0478173ff83b', description='akhanta-test'}-ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier.pointMultiply(ECOperations.java:575)
 java.base/sun.security.ec.ECOperations.multiply(ECOperations.java:214)
 java.base/sun.security.ec.ECPrivateKeyImpl.calculatePublicKey(ECPrivateKeyImpl.java:213)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPairImpl(ECKeyPairGenerator.java:197)
 java.base/sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:147)
 java.base/java.security.KeyPairGenerator$Delegate.generateKeyPair(KeyPairGenerator.java:728)
 java.base/sun.security.ssl.ECDHKeyExchange$ECDHEPossession.<init>(ECDHKeyExchange.java:118)
 java.base/sun.security.ssl.NamedGroup$ECDHEScheme.createPossession(NamedGroup.java:706)
 java.base/sun.security.ssl.NamedGroup$NamedGroupSpec.createPossession(NamedGroup.java:642)
 java.base/sun.security.ssl.NamedGroup.createPossession(NamedGroup.java:550)
 java.base/sun.security.ssl.SSLKeyExchange$T13KeyAgreement.createPossession(SSLKeyExchange.java:573)
 java.base/sun.security.ssl.SSLKeyExchange.createPossessions(SSLKeyExchange.java:92)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.getShare(KeyShareExtension.java:295)
 java.base/sun.security.ssl.KeyShareExtension$CHKeyShareProducer.produce(KeyShareExtension.java:257)
 java.base/sun.security.ssl.SSLExtension.produce(SSLExtension.java:599)
 java.base/sun.security.ssl.SSLExtensions.produce(SSLExtensions.java:265)
 java.base/sun.security.ssl.ClientHello$ClientHelloKickstartProducer.produce(ClientHello.java:637)
 java.base/sun.security.ssl.SSLHandshake.kickstart(SSLHandshake.java:526)
 java.base/sun.security.ssl.ClientHandshakeContext.kickstart(ClientHandshakeContext.java:112)
 java.base/sun.security.ssl.TransportContext.kickstart(TransportContext.java:258)
 java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:448)
 java.base/sun.security.ssl.SSLSocketImpl.ensureNegotiated(SSLSocketImpl.java:924)
 java.base/sun.security.ssl.SSLSocketImpl$AppOutputStream.write(SSLSocketImpl.java:1293)
 com.mongodb.internal.connection.SocketStream.write(SocketStream.java:164)
 com.mongodb.internal.connection.InternalStreamConnection.sendMessage(InternalStreamConnection.java:584)
 com.mongodb.internal.connection.InternalStreamConnection.sendCommandMessage(InternalStreamConnection.java:419)
 com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:364)
 com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:102)
 com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.initializeConnectionDescription(InternalStreamConnectionInitializer.java:130)
 com.mongodb.internal.connection.InternalStreamConnectionInitializer.startHandshake(InternalStreamConnectionInitializer.java:78)
 com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:213)
 com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.initialize(DefaultServerMonitor.java:427)
 com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:403)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:27:18 - [WARN] - o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-04-26 17:27:18 - [INFO] - o.s.b.a.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-04-26 17:27:18 - [ERROR] - o.s.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  applicationConfig defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\config\ApplicationConfig.class]
↑     ↓
|  jwtAuthenticationProvider defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\security\JwtAuthenticationProvider.class]
↑     ↓
|  userServiceImpl defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\service\impl\UserServiceImpl.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-04-26 17:29:08 - [INFO] - com.tomasdev.akhanta.RestApiApplication - Starting RestApiApplication using Java 22 with PID 11812 (C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes started by tomia in C:\Users\tomia\Desktop\code\akhanta-backend-2)
2024-04-26 17:29:08 - [INFO] - com.tomasdev.akhanta.RestApiApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-26 17:29:09 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-26 17:29:09 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 119 ms. Found 6 MongoDB repository interfaces.
2024-04-26 17:29:10 - [INFO] - o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-04-26 17:29:10 - [INFO] - org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-04-26 17:29:10 - [INFO] - org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-26 17:29:10 - [INFO] - o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-04-26 17:29:10 - [INFO] - o.s.b.w.s.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2005 ms
2024-04-26 17:29:10 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:29:10 - [INFO] - org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "akhanta-test"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='tomascaceres', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@cde8c6c, com.mongodb.Jep395RecordCodecProvider@174721c4, com.mongodb.KotlinCodecProvider@3592c1c4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=akhanta-test.a3hcche.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-wl8l0e-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='akhanta-test', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-26 17:29:10 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:29:10 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:29:11 - [ERROR] - o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'applicationConfig' defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\config\ApplicationConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'jwtAuthenticationProvider' defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\security\JwtAuthenticationProvider.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'userServiceImpl' defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\service\impl\UserServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'applicationConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-04-26 17:29:11 - [INFO] - org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=426449300, setName='atlas-wl8l0e-shard-0', canonicalAddress=ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, hosts=[ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017], passives=[], arbiters=[], primary='ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='euc1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_CENTRAL_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=49, topologyVersion=TopologyVersion{processId=662a21c7f4b48633f1be0943, counter=5}, lastWriteDate=Fri Apr 26 17:29:11 CEST 2024, lastUpdateTimeNanos=811461805741400}
2024-04-26 17:29:11 - [INFO] - org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=426658000, setName='atlas-wl8l0e-shard-0', canonicalAddress=ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, hosts=[ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017], passives=[], arbiters=[], primary='ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='euc1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_CENTRAL_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000252, setVersion=49, topologyVersion=TopologyVersion{processId=662a20c1fdb5cd0ce7841e16, counter=9}, lastWriteDate=Fri Apr 26 17:29:11 CEST 2024, lastUpdateTimeNanos=811461805943700}
2024-04-26 17:29:11 - [INFO] - org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=426449500, setName='atlas-wl8l0e-shard-0', canonicalAddress=ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017, hosts=[ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017], passives=[], arbiters=[], primary='ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='euc1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_CENTRAL_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=49, topologyVersion=TopologyVersion{processId=662a2343e11670e5a49fa8f3, counter=5}, lastWriteDate=Fri Apr 26 17:29:11 CEST 2024, lastUpdateTimeNanos=811461805741400}
2024-04-26 17:29:11 - [INFO] - org.mongodb.driver.cluster - Discovered replica set primary ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017 with max election id 7fffffff0000000000000252 and max set version 49
2024-04-26 17:29:11 - [INFO] - org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [BufferPoolPruner-1-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='662bc84638332649bf8105c7', description='akhanta-test'}-srv-akhanta-test.a3hcche.mongodb.net] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleepNanos0(Native Method)
 java.base/java.lang.Thread.sleepNanos(Thread.java:491)
 java.base/java.lang.Thread.sleep(Thread.java:522)
 com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor$DnsSrvRecordMonitorRunnable.run(DefaultDnsSrvRecordMonitor.java:108)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='662bc84638332649bf8105c7', description='akhanta-test'}-ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.nio.ch.Net.poll(Native Method)
 java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:191)
 java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
 java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:304)
 java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
 java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
 java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1108)
 java.base/java.net.Socket$SocketInputStream.read(Socket.java:1095)
 java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:489)
 java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
 java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1462)
 java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1068)
 com.mongodb.internal.connection.SocketStream.read(SocketStream.java:175)
 com.mongodb.internal.connection.SocketStream.read(SocketStream.java:200)
 com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:739)
 com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:603)
 com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:451)
 com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:404)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:224)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:156)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='662bc84638332649bf8105c7', description='akhanta-test'}-ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleepNanos0(Native Method)
 java.base/java.lang.Thread.sleepNanos(Thread.java:491)
 java.base/java.lang.Thread.sleep(Thread.java:522)
 com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:442)
 com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:68)
 com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:413)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='662bc84638332649bf8105c7', description='akhanta-test'}-ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.nio.ch.Net.poll(Native Method)
 java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:191)
 java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
 java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:304)
 java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
 java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
 java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1108)
 java.base/java.net.Socket$SocketInputStream.read(Socket.java:1095)
 java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:489)
 java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
 java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1462)
 java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1068)
 com.mongodb.internal.connection.SocketStream.read(SocketStream.java:175)
 com.mongodb.internal.connection.SocketStream.read(SocketStream.java:200)
 com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:739)
 com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:603)
 com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:451)
 com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:404)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:224)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:156)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='662bc84638332649bf8105c7', description='akhanta-test'}-ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleepNanos0(Native Method)
 java.base/java.lang.Thread.sleepNanos(Thread.java:491)
 java.base/java.lang.Thread.sleep(Thread.java:522)
 com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:442)
 com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:68)
 com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:413)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-ClusterId{value='662bc84638332649bf8105c7', description='akhanta-test'}-ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/sun.nio.ch.Net.poll(Native Method)
 java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:191)
 java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
 java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:304)
 java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
 java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
 java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1108)
 java.base/java.net.Socket$SocketInputStream.read(Socket.java:1095)
 java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:489)
 java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
 java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
 java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1462)
 java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1068)
 com.mongodb.internal.connection.SocketStream.read(SocketStream.java:175)
 com.mongodb.internal.connection.SocketStream.read(SocketStream.java:200)
 com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:739)
 com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:603)
 com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:451)
 com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:404)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:224)
 com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:156)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [cluster-rtt-ClusterId{value='662bc84638332649bf8105c7', description='akhanta-test'}-ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/java.lang.Thread.sleepNanos0(Native Method)
 java.base/java.lang.Thread.sleepNanos(Thread.java:491)
 java.base/java.lang.Thread.sleep(Thread.java:522)
 com.mongodb.internal.connection.DefaultServerMonitor.waitForNext(DefaultServerMonitor.java:442)
 com.mongodb.internal.connection.DefaultServerMonitor.access$1500(DefaultServerMonitor.java:68)
 com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.run(DefaultServerMonitor.java:413)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-2-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-4-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [MaintenanceTimer-3-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:29:11 - [WARN] - o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-04-26 17:29:11 - [INFO] - o.s.b.a.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-04-26 17:29:11 - [ERROR] - o.s.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  applicationConfig defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\config\ApplicationConfig.class]
↑     ↓
|  jwtAuthenticationProvider defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\security\JwtAuthenticationProvider.class]
↑     ↓
|  userServiceImpl defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\service\impl\UserServiceImpl.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-04-26 17:29:22 - [INFO] - com.tomasdev.akhanta.RestApiApplication - Starting RestApiApplication using Java 22 with PID 5172 (C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes started by tomia in C:\Users\tomia\Desktop\code\akhanta-backend-2)
2024-04-26 17:29:22 - [INFO] - com.tomasdev.akhanta.RestApiApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-26 17:29:23 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-26 17:29:23 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 103 ms. Found 6 MongoDB repository interfaces.
2024-04-26 17:29:23 - [INFO] - o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-04-26 17:29:24 - [INFO] - org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-04-26 17:29:24 - [INFO] - org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-26 17:29:24 - [INFO] - o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-04-26 17:29:24 - [INFO] - o.s.b.w.s.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1825 ms
2024-04-26 17:29:24 - [ERROR] - o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'applicationConfig' defined in file [C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes\com\tomasdev\akhanta\config\ApplicationConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.tomasdev.akhanta.security.JwtAuthenticationProvider' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-04-26 17:29:24 - [INFO] - org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-04-26 17:29:24 - [WARN] - o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-04-26 17:29:24 - [INFO] - o.s.b.a.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-04-26 17:29:24 - [ERROR] - o.s.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.tomasdev.akhanta.config.ApplicationConfig required a bean of type 'com.tomasdev.akhanta.security.JwtAuthenticationProvider' that could not be found.


Action:

Consider defining a bean of type 'com.tomasdev.akhanta.security.JwtAuthenticationProvider' in your configuration.

2024-04-26 17:29:57 - [INFO] - com.tomasdev.akhanta.RestApiApplication - Starting RestApiApplication using Java 22 with PID 14060 (C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes started by tomia in C:\Users\tomia\Desktop\code\akhanta-backend-2)
2024-04-26 17:29:57 - [INFO] - com.tomasdev.akhanta.RestApiApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-26 17:29:58 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-26 17:29:58 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 6 MongoDB repository interfaces.
2024-04-26 17:29:59 - [INFO] - o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-04-26 17:29:59 - [INFO] - org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-04-26 17:29:59 - [INFO] - org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-26 17:29:59 - [INFO] - o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-04-26 17:29:59 - [INFO] - o.s.b.w.s.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1751 ms
2024-04-26 17:29:59 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:29:59 - [INFO] - org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "akhanta-test"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='tomascaceres', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6b4125ed, com.mongodb.Jep395RecordCodecProvider@78da899f, com.mongodb.KotlinCodecProvider@e7b265e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=akhanta-test.a3hcche.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-wl8l0e-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='akhanta-test', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-26 17:29:59 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:29:59 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:30:00 - [INFO] - org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=521923700, setName='atlas-wl8l0e-shard-0', canonicalAddress=ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, hosts=[ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017], passives=[], arbiters=[], primary='ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='euc1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_CENTRAL_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=49, topologyVersion=TopologyVersion{processId=662a21c7f4b48633f1be0943, counter=5}, lastWriteDate=Fri Apr 26 17:30:01 CEST 2024, lastUpdateTimeNanos=811511168774500}
2024-04-26 17:30:00 - [INFO] - org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=522173700, setName='atlas-wl8l0e-shard-0', canonicalAddress=ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017, hosts=[ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017], passives=[], arbiters=[], primary='ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='euc1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_CENTRAL_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=49, topologyVersion=TopologyVersion{processId=662a2343e11670e5a49fa8f3, counter=5}, lastWriteDate=Fri Apr 26 17:30:01 CEST 2024, lastUpdateTimeNanos=811511168988000}
2024-04-26 17:30:00 - [INFO] - org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=521954600, setName='atlas-wl8l0e-shard-0', canonicalAddress=ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, hosts=[ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017], passives=[], arbiters=[], primary='ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='euc1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_CENTRAL_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000252, setVersion=49, topologyVersion=TopologyVersion{processId=662a20c1fdb5cd0ce7841e16, counter=9}, lastWriteDate=Fri Apr 26 17:30:01 CEST 2024, lastUpdateTimeNanos=811511168774600}
2024-04-26 17:30:00 - [INFO] - org.mongodb.driver.cluster - Discovered replica set primary ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017 with max election id 7fffffff0000000000000252 and max set version 49
2024-04-26 17:30:01 - [WARN] - o.s.b.a.s.servlet.UserDetailsServiceAutoConfiguration - 

Using generated security password: f4bdc475-7a7e-4544-9385-2fbf793bdeaa

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-04-26 17:30:02 - [INFO] - o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@29bd056a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21e702b8, org.springframework.security.web.context.SecurityContextHolderFilter@40ddf339, org.springframework.security.web.header.HeaderWriterFilter@66b40dd3, org.springframework.web.filter.CorsFilter@7f1fec57, org.springframework.security.web.authentication.logout.LogoutFilter@451af781, com.tomasdev.akhanta.security.JwtAuthFilter@76d0ecd7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d271a54, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ff8e744, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c9e3d01, org.springframework.security.web.session.SessionManagementFilter@4cf01c41, org.springframework.security.web.access.ExceptionTranslationFilter@5abc5854, org.springframework.security.web.access.intercept.AuthorizationFilter@13137835]
2024-04-26 17:30:02 - [INFO] - o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-04-26 17:30:02 - [INFO] - com.tomasdev.akhanta.RestApiApplication - Started RestApiApplication in 5.147 seconds (process running for 6.0)
2024-04-26 17:30:12 - [INFO] - o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-26 17:30:12 - [INFO] - org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-26 17:30:12 - [INFO] - org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-04-26 17:30:13 - [ERROR] - o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Cannot autogenerate id of type java.lang.Integer for entity of type com.tomasdev.akhanta.model.Token] with root cause
org.springframework.dao.InvalidDataAccessApiUsageException: Cannot autogenerate id of type java.lang.Integer for entity of type com.tomasdev.akhanta.model.Token
	at org.springframework.data.mongodb.core.EntityOperations$MappedEntity.assertUpdateableIdIfNotSet(EntityOperations.java:764)
	at org.springframework.data.mongodb.core.MongoTemplate.doInsert(MongoTemplate.java:1328)
	at org.springframework.data.mongodb.core.MongoTemplate.insert(MongoTemplate.java:1261)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.save(SimpleMongoRepository.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy77.save(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy77.save(Unknown Source)
	at com.tomasdev.akhanta.security.JwtAuthenticationProvider.createToken(JwtAuthenticationProvider.java:60)
	at com.tomasdev.akhanta.service.impl.AuthServiceImpl.signIn(AuthServiceImpl.java:43)
	at com.tomasdev.akhanta.controller.AuthController.signIn(AuthController.java:34)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-04-26 17:30:13 - [ERROR] - com.tomasdev.akhanta.exceptions.GlobalExceptionHandler - InsufficientAuthenticationException - Full authentication is required to access this resource
2024-04-26 17:30:47 - [INFO] - com.tomasdev.akhanta.RestApiApplication - Starting RestApiApplication using Java 22 with PID 7880 (C:\Users\tomia\Desktop\code\akhanta-backend-2\target\classes started by tomia in C:\Users\tomia\Desktop\code\akhanta-backend-2)
2024-04-26 17:30:47 - [INFO] - com.tomasdev.akhanta.RestApiApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-26 17:30:48 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-26 17:30:48 - [INFO] - o.s.d.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113 ms. Found 6 MongoDB repository interfaces.
2024-04-26 17:30:49 - [INFO] - o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-04-26 17:30:49 - [INFO] - org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-04-26 17:30:49 - [INFO] - org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-26 17:30:49 - [INFO] - o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-04-26 17:30:49 - [INFO] - o.s.b.w.s.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1913 ms
2024-04-26 17:30:50 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:30:50 - [INFO] - org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "akhanta-test"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='tomascaceres', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6518fdfd, com.mongodb.Jep395RecordCodecProvider@11d2dd2d, com.mongodb.KotlinCodecProvider@cde8c6c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=akhanta-test.a3hcche.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-wl8l0e-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='akhanta-test', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-26 17:30:50 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:30:50 - [INFO] - org.mongodb.driver.cluster - Adding discovered server ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017 to client view of cluster
2024-04-26 17:30:50 - [INFO] - org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=454225400, setName='atlas-wl8l0e-shard-0', canonicalAddress=ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, hosts=[ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017], passives=[], arbiters=[], primary='ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='euc1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_CENTRAL_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=49, topologyVersion=TopologyVersion{processId=662a21c7f4b48633f1be0943, counter=5}, lastWriteDate=Fri Apr 26 17:30:51 CEST 2024, lastUpdateTimeNanos=811561249234000}
2024-04-26 17:30:50 - [INFO] - org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=454407100, setName='atlas-wl8l0e-shard-0', canonicalAddress=ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017, hosts=[ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017], passives=[], arbiters=[], primary='ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='euc1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_CENTRAL_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=49, topologyVersion=TopologyVersion{processId=662a2343e11670e5a49fa8f3, counter=5}, lastWriteDate=Fri Apr 26 17:30:51 CEST 2024, lastUpdateTimeNanos=811561249445400}
2024-04-26 17:30:50 - [INFO] - org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=454516600, setName='atlas-wl8l0e-shard-0', canonicalAddress=ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, hosts=[ac-yehvzqq-shard-00-00.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017, ac-yehvzqq-shard-00-02.a3hcche.mongodb.net:27017], passives=[], arbiters=[], primary='ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='euc1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_CENTRAL_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000252, setVersion=49, topologyVersion=TopologyVersion{processId=662a20c1fdb5cd0ce7841e16, counter=9}, lastWriteDate=Fri Apr 26 17:30:51 CEST 2024, lastUpdateTimeNanos=811561249519200}
2024-04-26 17:30:50 - [INFO] - org.mongodb.driver.cluster - Discovered replica set primary ac-yehvzqq-shard-00-01.a3hcche.mongodb.net:27017 with max election id 7fffffff0000000000000252 and max set version 49
2024-04-26 17:30:51 - [WARN] - o.s.b.a.s.servlet.UserDetailsServiceAutoConfiguration - 

Using generated security password: 4d77c9ff-d272-4194-8c9e-5e38402d1f65

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-04-26 17:30:52 - [INFO] - o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3a63d248, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c4ad54, org.springframework.security.web.context.SecurityContextHolderFilter@46fb9581, org.springframework.security.web.header.HeaderWriterFilter@d271a54, org.springframework.web.filter.CorsFilter@4b22214d, org.springframework.security.web.authentication.logout.LogoutFilter@4a2d66e, com.tomasdev.akhanta.security.JwtAuthFilter@2dac2e1b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@416b681c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46d69ca4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@498b611e, org.springframework.security.web.session.SessionManagementFilter@61d42275, org.springframework.security.web.access.ExceptionTranslationFilter@40ddf339, org.springframework.security.web.access.intercept.AuthorizationFilter@432f4626]
2024-04-26 17:30:52 - [INFO] - o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-04-26 17:30:52 - [INFO] - com.tomasdev.akhanta.RestApiApplication - Started RestApiApplication in 5.405 seconds (process running for 6.265)
2024-04-26 17:30:54 - [INFO] - o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-26 17:30:54 - [INFO] - org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-26 17:30:54 - [INFO] - org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-04-26 17:31:31 - [INFO] - com.tomasdev.akhanta.security.JwtAuthFilter - Applying internal jwt filter to /admin/articles
2024-04-26 17:31:31 - [INFO] - com.tomasdev.akhanta.controller.AdminController - [ /admin/articles - POST ]
2024-04-26 17:31:32 - [INFO] - com.tomasdev.akhanta.service.impl.AmazonS3ServiceImpl - [ New S3 resource created at https://akhanta.s3.amazonaws.com/articulos/2aEo0ncX2ucu4FhO0AUz4RhR2NDb6hum1Gxz7ubg3jnN1WLB3UIN1wdj ]
2024-04-26 17:31:32 - [INFO] - com.tomasdev.akhanta.service.impl.ArticleServiceImpl - [ Creating new article id: 662bc8d4087bab277fb96a14 ]
